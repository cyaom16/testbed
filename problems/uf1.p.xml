<problem>
<name> UF1 </name>
<description> </description>
<n_variables> 3 </n_variables>
<n_objectives> 2 </n_objectives>
<signature> A1 </signature>
<lower_bound> [0 -1 -1] </lower_bound>
<upper_bound> [1 1 1] </upper_bound>
<min_point> </min_point>
<min_value> </min_value>
<category> continuous </category>
<category> nonlinear </category>
<category> nonsymmetric </category>
<category> multimodal </category>
<category> unconstrained </category>
<category> largescale </category>
<category> moo </category>
<function> % n=3, xlv=[0 0 0], xuv=[1 1 1] </function>
<function> % x and f are columnwise, the imput x must be inside the search space and </function>
<function> % it could be a matrix </function>
<function> [dim, num]  = size(x); </function>
<function> tmp         = zeros(dim,num); </function>
<function> tmp(2:dim,:)= (x(2:dim,:) - sin(6.0*pi.*repmat(x(1,:),[dim-1,1]) + pi/dim.*repmat((2:dim)',[1,num]))).^2; </function>
<function> tmp1        = sum(tmp(3:2:dim,:));  % odd index </function>
<function> tmp2        = sum(tmp(2:2:dim,:));  % even index </function>
<function> f1          = x(1,:)             + 2.0.*tmp1./size(3:2:dim,2); </function>
<function> f2          = 1.0 - sqrt(x(1,:)) + 2.0.*tmp2./size(2:2:dim,2); </function>
<function> f=[f1' f2']; </function>
<function> clear tmp; </function>
</problem>
